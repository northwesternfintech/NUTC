version: '3'
services:
  sandbox:
    image: nutc-exchange
    build:
      context: ..
      dockerfile: docker/SandboxDockerfile
      args:
        firebase_emulator: "false"
    restart: unless-stopped
    environment:
      - NUTC_EXPOSE_METRICS=1
    networks:
      - net

  webserver:
    image: nutc-webserver
    build:
      context: ..
      dockerfile: docker/WebserverDockerfile
    restart: unless-stopped
    networks:
      - net

  linter:
    image: nutc-linter
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/LinterDockerfile
      args:
        firebase_emulator: "false"
    networks:
      - net

  firebase:
    image: spine3/firebase-emulator
    depends_on:
      - website
    restart: unless-stopped
    ports:
      - "4000:4000" 
      - "4400:4400" 
      - "5001:5001"
      - "9000:9000"
      - "9099:9099"
      - "9199:9199"
    environment:
      GCP_PROJECT: "nutc-web"
      ENABLE_UI: true
    volumes:
      - "../web/firebase.json:/firebase/firebase.json"
      - "../web/baseline-data:/firebase/baseline-data"
      - "../web/database.rules.json:/firebase/database.rules.json"
      - "../web/storage.rules:/firebase/storage.rules"
      - "../web/functions:/firebase/functions"
    networks:
      - net

  website:
    image: node:20
    restart: unless-stopped
    working_dir: /app
    volumes: 
      - "../web:/app"
    ports:
      - "3001:3001"
    command: >
      sh -c "npm i && cd functions && npm i && npm run build && cd .. && npm run dev"
    environment:
      - NODE_ENV=development

  # Exposed on port 9000
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=12h'
    restart: unless-stopped
    networks:
      - net

  reverse-proxy:
    image: nginx:latest
    ports:
      - "26389:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    depends_on:
      - webserver
      - grafana
    networks:
      - net

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    user: "472:472"
    ports:
      - "3000:3000"
    environment:
    - GF_SECURITY_ALLOW_EMBEDDING=true
    - GF_AUTH_ANONYMOUS_ENABLED=true
    - GF_AUTH_ANONYMOUS_ORG_NAME=MAIN
    - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./grafana_data:/var/lib/grafana
    networks:
      - net

networks:
  net:
    ipam:
      config:
        - subnet: 172.20.0.0/16
