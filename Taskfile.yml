version: '3'

env:
  NAME: NUTC

#todo: task will not work if alias is go-task. Maybe try to fix?

tasks:
  init-default-user-presets:
    cmds:
      - cp config/DefaultCMakeUserPresets.json exchange/CMakeUserPresets.json
      - cp config/DefaultCMakeUserPresets.json wrapper/CMakeUserPresets.json
      - cp config/DefaultCMakeUserPresets.json linter/CMakeUserPresets.json

  init-exchange:
    dir: ./exchange
    deps: [init-default-user-presets]
    preconditions: 
      - sh: command -v conan >/dev/null 2>&1 || exit 1
        msg: "Conan is not installed"
    cmds:
      - task deps
      - task init
      - task build

  init-wrapper:
    dir: ./wrapper
    deps: [init-default-user-presets]
    preconditions: 
      - sh: command -v conan >/dev/null 2>&1 || exit 1
        msg: "Conan is not installed"
    cmds:
      - task deps
      - task init
      - task build

  init-linter:
    dir: ./linter
    deps: [init-default-user-presets]
    preconditions: 
      - sh: command -v conan >/dev/null 2>&1 || exit 1
        msg: "Conan is not installed"
    cmds:
      - task deps
      - task init
      - task build

  init-analyzer:
    dir: ./analyzer
    cmds:
      - task setup
      - task build

  init-web:
    dir: ./web
    preconditions: 
      - sh: command -v bun >/dev/null 2>&1 || exit 1
        msg: "Bun is not installed"
    cmds:
      - bun install
      - cd functions && bun install && cd ..
      - bun run build

  # listing tasks as deps makes them run in parallel
  init-all:
    cmds:
      - task: init-exchange
      - task: init-wrapper
      - task: init-linter
      - task: init-analyzer
      - task: init-web

  exchange-docker-build:
    cmds:
      - docker build -t nutc-exchange:latest . -f exchange/Dockerfile

  format-exchange:
    dir: exchange
    cmds:
      - cmake -D FIX=YES -P cmake/spell.cmake
      - cmake -D FIX=YES -P cmake/lint.cmake

  format-wrapper:
    dir: wrapper
    cmds:
      - cmake -D FIX=YES -P cmake/spell.cmake
      - cmake -D FIX=YES -P cmake/lint.cmake

  format-linter:
    dir: linter
    cmds:
      - cmake -D FIX=YES -P cmake/spell.cmake
      - cmake -D FIX=YES -P cmake/lint.cmake

  format-all:
    cmds:
      - task: format-exchange
      - task: format-wrapper
      - task: format-linter


