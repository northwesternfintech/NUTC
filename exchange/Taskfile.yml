version: '3'

env:
  NAME: NUTC

tasks:
  deps:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - conan install . -s build_type=Debug -b missing -pr cpp20 -pr:b cpp20
    
  format:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cmake -D FIX=YES -P cmake/lint.cmake

  init:
    dir: '{{.USER_WORKING_DIR}}'
    preconditions:
      - test -f CMakeUserPresets.json
    cmds:
      - cmake --preset=dev

  check-and-start-services:
    cmds:
      # - ./scripts/check_redis.sh
      - ./scripts/check_rabbitmq.sh

  build:
    dir: '{{.USER_WORKING_DIR}}'
    preconditions:
      - test -f CMakeUserPresets.json
    cmds:
      - cmake --build --preset=dev -j

  run:
    dir: '{{.USER_WORKING_DIR}}'
    env:
      NUTC_WRAPPER_BINARY_PATH: "./build/dev/WRAPPER"
    cmds:
      - task: build
      - task: check-and-start-services
      - ./build/dev/{{.NAME}} 

  dev:
    env:
      NUTC_WRAPPER_BINARY_PATH: "./build/dev/WRAPPER"
    cmds:
      - task: build
      - task: check-and-start-services
      - ./build/dev/{{.NAME}} --dev

  sandbox:
    env:
      NUTC_WRAPPER_BINARY_PATH: "./build/dev/WRAPPER"
    cmds:
      - task: build
      - task: check-and-start-services
      - ./build/dev/{{.NAME}} --sandbox "1Pd1lJUMPURc0ezL393vWwRz9g32" " NgMtXt5Ff_lwqtySBJ9"

  run-v:
    env:
      SPDLOG_LEVEL: trace
    cmds:
      - task: run

  test:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - task: build
      - task: utest
      - task: itest

  utest:
    cmds:
      - task: build
      - ctest --preset=dev -R "Unit*"

  itest:
    env:
      NUTC_WRAPPER_BINARY_PATH: "../WRAPPER"
    cmds:
      - task: build
      - task: check-and-start-services
      - mkdir -p build/dev/test/test_algos
      - cp -r test/test_algos/* build/dev/test/test_algos
      - ctest --timeout 4 --preset=dev -R "Integration*"

  docs:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cmake --build --preset=dev -t docs
      - cmake --build --preset=dev -t docs-serve

  clean:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cmake --build --preset=dev -t clean

  default:
    cmds:
      - task: run

  lint:
    cmds:
      - cmake -D FIX=YES -P cmake/lint.cmake
      - cmake -D FIX=YES -P cmake/spell.cmake

